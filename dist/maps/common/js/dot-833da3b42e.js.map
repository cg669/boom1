{"version":3,"sources":["common/js/dot.js"],"names":["Dot","_ref","left","top","radius","speed","className","_classCallCheck","this","el","key","UUIDjs","create","toString","document","createElement","style","height","body","appendChild","new","r","Math","pow","ceil","random","dt","PI","Number","offsetLeft","sin","cos","removeChild"],"mappings":"iYAAMA,eACF,SAAAA,EAAAC,GAAqD,IAAvCC,EAAuCD,EAAvCC,KAAMC,EAAiCF,EAAjCE,IAAKC,EAA4BH,EAA5BG,OAAQC,EAAoBJ,EAApBI,MAAOC,EAAaL,EAAbK,UAAaC,gBAAAC,KAAAR,GACjDQ,KAAKN,KAAOA,EACZM,KAAKL,IAAMA,EACXK,KAAKJ,OAASA,EACdI,KAAKH,MAAQA,EACbG,KAAKC,GAAK,KALdD,KAAAE,IAAAC,OAAqDC,SAAAC,WAAAL,KAAvCN,GAAuC,EAAAM,KAAjCL,GAAiC,EAAAK,KAA5BJ,KAA4B,EAAAI,KAApBH,UAAAA,EAAoBG,KAAbF,2DAcpC,IAAMG,EAAKK,SAASC,cAAc,OAblCN,EAAAH,UAAYJ,KAAZI,WAAA,MACAG,EAAAO,MAAAd,KAAAM,KAAAN,KAAAM,KAAAJ,OAAA,EAAA,KACAK,EAAAO,MAAKZ,IAASA,KAAdD,IAAAK,KAAAJ,OAAA,EAAA,KACAK,EAAAO,MAAKX,MAAQA,KAAbD,OAAA,KACAK,EAAAO,MAAAC,OAAAT,KAAAJ,OAAA,KACAI,KAAKE,GAALD,EACAK,SAAAI,KAAAC,YAAAV,kCAGA,GAAAD,KAAKF,IAAAA,CACLE,KAAAY,KAAA,EACH,IAAAC,EAAAC,KAAAC,KAAA,EAAAD,KAAAE,KAAA,IAAAF,KAAAG,WAgBOjB,KAAKkB,GAAS,EAAJL,EAAQC,KAAKK,GAAK,EAC5BnB,KAAKC,GAAGO,MAAMd,KAAO0B,OAAOpB,KAAKC,GAAGoB,YAAcR,EAAIb,KAAKH,MAAS,UAdxEI,KAAGH,IAAAA,IACHG,KAAGO,OAAH,EACAP,KAAGO,GAAHA,MAAAd,KAAuBC,KAAMD,KAAKE,KAAL0B,IAA7BtB,KAAAkB,IAAAlB,KAAAH,MAAA,KACAI,KAAGO,GAAHA,MAAAb,IAAiBK,KAAKJ,IAALkB,KAAjBS,IAAAvB,KAAAkB,IAAAlB,KAAAH,MAAA,uCAsBAS,SAASI,KAAKc,YAAYxB,KAAKC","file":"../../../common/js/dot-833da3b42e.js","sourcesContent":["class Dot {\n    constructor({ left, top, radius, speed, className }) {\n        this.left = left;\n        this.top = top;\n        this.radius = radius;\n        this.speed = speed;\n        this.el = null;\n        this.key = UUIDjs.create().toString();\n        this.dt = 0;\n        this.dl = 0;\n        this.new = true;\n        this.className = className;\n        this.init();\n    }\n    init() {\n        const el = document.createElement('div');\n        el.className = this.className || 'dot';\n        el.style.left = `${this.left - this.radius / 2}px`;\n        el.style.top = `${this.top - this.radius / 2}px`;\n        el.style.width = this.radius + 'px';\n        el.style.height = this.radius + 'px';\n        this.el = el;\n        document.body.appendChild(el);\n    }\n    move() {\n        if(this.new){\n            this.new  = false;\n            const r = Math.pow(-1,Math.ceil( Math.random() * 1000));\n            // const c = Math.pow(-1,Math.ceil( Math.random() * 1000));\n            this.dt = r > 0 ? Math.PI : 0;\n            this.el.style.left = Number(this.el.offsetLeft) + r * this.speed  + 'px';\n            // console.log(r);\n        }else{\n            this.dt += 0.03;\n            this.speed += 1;\n            this.el.style.left = this.left + Math.sin(this.dt)*this.speed  + 'px';\n            this.el.style.top =this.top + Math.cos(this.dt)*this.speed  + 'px';\n        }\n    }\n    destory() {\n        // console.log(this.el);\n        document.body.removeChild(this.el);\n    }\n}\n"]}