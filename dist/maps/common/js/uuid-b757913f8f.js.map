{"version":3,"sources":["common/js/uuid.js"],"names":["UUIDjs","getRandomInt","min","max","random","maxFromBits","bits","limitUI04","limitUI06","limitUI08","limitUI12","limitUI14","limitUI16","limitUI32","limitUI40","randomUI04","randomUI06","randomUI08","randomUI12","randomUI14","randomUI16","randomUI32","randomUI40","Math","randomUI48","paddedString","string","length","z","String","i","prototype","fromParts","timeLow","timeMid","timeHiAndVersion","clockSeqHiAndReserved","clockSeqLow","node","this","version","toString","hex","parts","ints","toURN","j","toBytes","split","intPos","equals","uuid","UUID","parseInt","substr","hm","ts","getTimeFieldValues","time","Date","UTC","_create1","mid","hi","timestamp","tick","timestampRatio","now","sequence","getTime","tf","cshar","fromTime","last","thav","low","tl","csl","create","firstFromTime","lastFromTime","strId","r","limitUI48","fromBytes","octet","pos","str","fromBinary","binary","charCodeAt","Error","new","fromURN","newTS"],"mappings":"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","file":"../../../common/js/uuid-b757913f8f.js","sourcesContent":["/*\n * UUID-js: A js library to generate and parse UUIDs, TimeUUIDs and generate\n * TimeUUID based on dates for range selections.\n * @see http://www.ietf.org/rfc/rfc4122.txt\n **/\n\nfunction UUIDjs() {\n};\n\nUUIDjs.maxFromBits = function(bits) {\n  return Math.pow(2, bits);\n};\n\nUUIDjs.limitUI04 = UUIDjs.maxFromBits(4);\nUUIDjs.limitUI06 = UUIDjs.maxFromBits(6);\nUUIDjs.limitUI08 = UUIDjs.maxFromBits(8);\nUUIDjs.limitUI12 = UUIDjs.maxFromBits(12);\nUUIDjs.limitUI14 = UUIDjs.maxFromBits(14);\nUUIDjs.limitUI16 = UUIDjs.maxFromBits(16);\nUUIDjs.limitUI32 = UUIDjs.maxFromBits(32);\nUUIDjs.limitUI40 = UUIDjs.maxFromBits(40);\nUUIDjs.limitUI48 = UUIDjs.maxFromBits(48);\n\n// Returns a random integer between min and max\n// Using Math.round() will give you a non-uniform distribution!\n// @see https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/Math/random\nfunction getRandomInt(min, max) {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nUUIDjs.randomUI04 = function() {\n  return getRandomInt(0, UUIDjs.limitUI04-1);\n};\nUUIDjs.randomUI06 = function() {\n  return getRandomInt(0, UUIDjs.limitUI06-1);\n};\nUUIDjs.randomUI08 = function() {\n  return getRandomInt(0, UUIDjs.limitUI08-1);\n};\nUUIDjs.randomUI12 = function() {\n  return getRandomInt(0, UUIDjs.limitUI12-1);\n};\nUUIDjs.randomUI14 = function() {\n  return getRandomInt(0, UUIDjs.limitUI14-1);\n};\nUUIDjs.randomUI16 = function() {\n  return getRandomInt(0, UUIDjs.limitUI16-1);\n};\nUUIDjs.randomUI32 = function() {\n  return getRandomInt(0, UUIDjs.limitUI32-1);\n};\nUUIDjs.randomUI40 = function() {\n  return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 40 - 30)) * (1 << 30);\n};\nUUIDjs.randomUI48 = function() {\n  return (0 | Math.random() * (1 << 30)) + (0 | Math.random() * (1 << 48 - 30)) * (1 << 30);\n};\n\nUUIDjs.paddedString = function(string, length, z) {\n  string = String(string);\n  z = (!z) ? '0' : z;\n  var i = length - string.length;\n  for (; i > 0; i >>>= 1, z += z) {\n    if (i & 1) {\n      string = z + string;\n    }\n  }\n  return string;\n};\n\nUUIDjs.prototype.fromParts = function(timeLow, timeMid, timeHiAndVersion, clockSeqHiAndReserved, clockSeqLow, node) {\n  this.version = (timeHiAndVersion >> 12) & 0xF;\n  this.hex = UUIDjs.paddedString(timeLow.toString(16), 8)\n             + '-'\n             + UUIDjs.paddedString(timeMid.toString(16), 4)\n             + '-'\n             + UUIDjs.paddedString(timeHiAndVersion.toString(16), 4)\n             + '-'\n             + UUIDjs.paddedString(clockSeqHiAndReserved.toString(16), 2)\n             + UUIDjs.paddedString(clockSeqLow.toString(16), 2)\n             + '-'\n             + UUIDjs.paddedString(node.toString(16), 12);\n  return this;\n};\n\nUUIDjs.prototype.toString = function() {\n  return this.hex;\n};\nUUIDjs.prototype.toURN = function() {\n  return 'urn:uuid:' + this.hex;\n};\n\nUUIDjs.prototype.toBytes = function() {\n  var parts = this.hex.split('-');\n  var ints = [];\n  var intPos = 0;\n  for (var i = 0; i < parts.length; i++) {\n    for (var j = 0; j < parts[i].length; j+=2) {\n      ints[intPos++] = parseInt(parts[i].substr(j, 2), 16);\n    }\n  }\n  return ints;\n};\n\nUUIDjs.prototype.equals = function(uuid) {\n  if (!(uuid instanceof UUID)) {\n    return false;\n  }\n  if (this.hex !== uuid.hex) {\n    return false;\n  }\n  return true;\n};\n\nUUIDjs.getTimeFieldValues = function(time) {\n  var ts = time - Date.UTC(1582, 9, 15);\n  var hm = ((ts / 0x100000000) * 10000) & 0xFFFFFFF;\n  return { low: ((ts & 0xFFFFFFF) * 10000) % 0x100000000,\n            mid: hm & 0xFFFF, hi: hm >>> 16, timestamp: ts };\n};\n\nUUIDjs._create4 = function() {\n  return new UUIDjs().fromParts(\n    UUIDjs.randomUI32(),\n    UUIDjs.randomUI16(),\n    0x4000 | UUIDjs.randomUI12(),\n    0x80   | UUIDjs.randomUI06(),\n    UUIDjs.randomUI08(),\n    UUIDjs.randomUI48()\n  );\n};\n\nUUIDjs._create1 = function() {\n  var now = new Date().getTime();\n  var sequence = UUIDjs.randomUI14();\n  var node = (UUIDjs.randomUI08() | 1) * 0x10000000000 + UUIDjs.randomUI40();\n  var tick = UUIDjs.randomUI04();\n  var timestamp = 0;\n  var timestampRatio = 1/4;\n\n  if (now != timestamp) {\n    if (now < timestamp) {\n      sequence++;\n    }\n    timestamp = now;\n    tick = UUIDjs.randomUI04();\n  } else if (Math.random() < timestampRatio && tick < 9984) {\n    tick += 1 + UUIDjs.randomUI04();\n  } else {\n    sequence++;\n  }\n\n  var tf = UUIDjs.getTimeFieldValues(timestamp);\n  var tl = tf.low + tick;\n  var thav = (tf.hi & 0xFFF) | 0x1000;\n\n  sequence &= 0x3FFF;\n  var cshar = (sequence >>> 8) | 0x80;\n  var csl = sequence & 0xFF;\n\n  return new UUIDjs().fromParts(tl, tf.mid, thav, cshar, csl, node);\n};\n\nUUIDjs.create = function(version) {\n  version = version || 4;\n  return this['_create' + version]();\n};\n\nUUIDjs.fromTime = function(time, last) {\n  last = (!last) ? false : last;\n  var tf = UUIDjs.getTimeFieldValues(time);\n  var tl = tf.low;\n  var thav = (tf.hi & 0xFFF) | 0x1000;  // set version '0001'\n  if (last === false) {\n    return new UUIDjs().fromParts(tl, tf.mid, thav, 0, 0, 0);\n  } else {\n    return new UUIDjs().fromParts(tl, tf.mid, thav, 0x80 | UUIDjs.limitUI06, UUIDjs.limitUI08 - 1, UUIDjs.limitUI48 - 1);\n  }\n};\n\nUUIDjs.firstFromTime = function(time) {\n  return UUIDjs.fromTime(time, false);\n};\nUUIDjs.lastFromTime = function(time) {\n  return UUIDjs.fromTime(time, true);\n};\n\nUUIDjs.fromURN = function(strId) {\n  var r, p = /^(?:urn:uuid:|\\{)?([0-9a-f]{8})-([0-9a-f]{4})-([0-9a-f]{4})-([0-9a-f]{2})([0-9a-f]{2})-([0-9a-f]{12})(?:\\})?$/i;\n  if ((r = p.exec(strId))) {\n    return new UUIDjs().fromParts(parseInt(r[1], 16), parseInt(r[2], 16),\n                            parseInt(r[3], 16), parseInt(r[4], 16),\n                            parseInt(r[5], 16), parseInt(r[6], 16));\n  }\n  return null;\n};\n\nUUIDjs.fromBytes = function(ints) {\n  if (ints.length < 5) {\n    return null;\n  }\n  var str = '';\n  var pos = 0;\n  var parts = [4, 2, 2, 2, 6];\n  for (var i = 0; i < parts.length; i++) {\n    for (var j = 0; j < parts[i]; j++) {\n      var octet = ints[pos++].toString(16);\n      if (octet.length == 1) {\n        octet = '0' + octet;\n      }\n      str += octet;\n    }\n    if (parts[i] !== 6) {\n      str += '-';\n    }\n  }\n  return UUIDjs.fromURN(str);\n};\n\nUUIDjs.fromBinary = function(binary) {\n  var ints = [];\n  for (var i = 0; i < binary.length; i++) {\n    ints[i] = binary.charCodeAt(i);\n    if (ints[i] > 255 || ints[i] < 0) {\n      throw new Error('Unexpected byte in binary data.');\n    }\n  }\n  return UUIDjs.fromBytes(ints);\n};\n\n// Aliases to support legacy code. Do not use these when writing new code as\n// they may be removed in future versions!\nUUIDjs.new = function() {\n  return this.create(4);\n};\nUUIDjs.newTS = function() {\n  return this.create(1);\n};\n\n"]}