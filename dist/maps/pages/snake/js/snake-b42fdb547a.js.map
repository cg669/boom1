{"version":3,"sources":["pages/snake/js/snake.js"],"names":["EventUtil","addHandler","element","type","handler","addEventListener","attachEvent","removeEventListener","removeHandler","detachEvent","listenTouchDirection","target","handleTouchEvent","upCallback","rightCallback","downCallback","leftCallback","startX","startY","event","touches","pageX","pageY","spanX","changedTouches","Math","spanY","abs","isPreventDefault","preventDefault","this","WorkBus","props","_classCallCheck","_this","_possibleConstructorReturn","__proto__","Object","getPrototypeOf","call","hatList","dotList","BaseWorkBus","hat","num","arguments","length","undefined","console","dot","Dot","left","l","top","t","radius","speed","className","push","lastOne","list","snake","Biu","px","py","add","key","filter","el","_this2","w","md","random","width","height","winWidth","winHeight","addHat","times","isWorking","iTimer","requestAnimationFrame","reduce","a","b","changePxy","callBackFunc","dt","PI","destory","deleteDot","move","index","changeColor","forEach","collText","round","addDot","collectionFirst","item","style","offsetLeft","removeHat","offsetTop","bus","playWork","snakeNum","up","callFunc","changeSpeed","right","down","document","body","e","passive"],"mappings":"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","file":"../../../../pages/snake/js/snake-b42fdb547a.js","sourcesContent":["\n\nvar EventUtil = {\n    addHandler: function (element, type, handler) {\n        if (element.addEventListener)\n            element.addEventListener(type, handler, false);\n        else if (element.attachEvent)\n            element.attachEvent(\"on\" + type, handler);\n        else\n            element[\"on\" + type] = handler;\n    },\n    removeHandler: function (element, type, handler) {\n        if (element.removeEventListener)\n            element.removeEventListener(type, handler, false);\n        else if (element.detachEvent)\n            element.detachEvent(\"on\" + type, handler);\n        else\n            element[\"on\" + type] = handler;\n    },\n    /**\n     * 监听触摸的方向\n     * @param target            要绑定监听的目标元素\n     * @param isPreventDefault  是否屏蔽掉触摸滑动的默认行为（例如页面的上下滚动，缩放等）\n     * @param upCallback        向上滑动的监听回调（若不关心，可以不传，或传false）\n     * @param rightCallback     向右滑动的监听回调（若不关心，可以不传，或传false）\n     * @param downCallback      向下滑动的监听回调（若不关心，可以不传，或传false）\n     * @param leftCallback      向左滑动的监听回调（若不关心，可以不传，或传false）\n     */\n    listenTouchDirection: function (target, isPreventDefault, upCallback, rightCallback, downCallback, leftCallback) {\n        this.addHandler(target, \"touchstart\", handleTouchEvent);\n        this.addHandler(target, \"touchend\", handleTouchEvent);\n        this.addHandler(target, \"touchmove\", handleTouchEvent);\n        var startX;\n        var startY;\n        function handleTouchEvent(event) {\n            switch (event.type) {\n                case \"touchstart\":\n                    startX = event.touches[0].pageX;\n                    startY = event.touches[0].pageY;\n                    break;\n                case \"touchend\":\n                    var spanX = event.changedTouches[0].pageX - startX;\n                    var spanY = event.changedTouches[0].pageY - startY;\n\n                    if (Math.abs(spanX) > Math.abs(spanY)) {      //认定为水平方向滑动\n                        if (spanX > 30) {         //向右\n                            if (rightCallback)\n                                rightCallback();\n                        } else if (spanX < -30) { //向左\n                            if (leftCallback)\n                                leftCallback();\n                        }\n                    } else {                                    //认定为垂直方向滑动\n                        if (spanY > 30) {         //向下\n                            if (downCallback)\n                                downCallback();\n                        } else if (spanY < -30) {//向上\n                            if (upCallback)\n                                upCallback();\n                        }\n                    }\n\n                    break;\n                case \"touchmove\":\n                    //阻止默认行为\n                    if (isPreventDefault)\n                        event.preventDefault();\n                    break;\n            }\n        }\n    }\n};\n\nclass WorkBus extends BaseWorkBus {\n    constructor(props) {\n        super(props);\n        this.hatList = [];\n        this.dotList = [];\n    }\n    addDot(hat,num=1){\n        console.log(num)\n        while(num > 0){\n            num--;\n            const dot = new Dot({ left: hat.l , top: hat.t, radius: 5, speed: 10,className: 'heart' });\n            this.dotList.push(dot);\n        }\n        \n    }\n    addHat(hat) {\n        this.hatList.push(hat);\n    }\n    addBiu(num=1){\n        while(num > 0){\n            num--;\n            const lastOne = this.list[this.list.length-1];\n            const snake = new Biu({ left: lastOne.px, top: lastOne.py, radius: 10 });\n            this.add(snake);\n        }\n    }\n    deleteDot(key){\n        const list = this.dotList;\n        this.dotList = list.filter(el => el.key !== key);\n    }\n    removeHat(key){\n        const list = this.hatList;\n        this.hatList = list.filter(el => el.key !== key);\n    }\n    playWork() {\n        if (this.times % 200 === 9) {\n            const w = Math.random() * 20 + 10;\n            const md = (Math.random() * 6 + 2) / 10\n            const hat = new Hat({ width: w, height: w, left: md * winWidth, top: md * winHeight })\n            this.addHat(hat);\n        }\n        this.times++;\n        this.isWorking = true;\n        this.iTimer = requestAnimationFrame(() => {\n            if (this.change) {\n                this.list.reduce((a, b) => {\n                    if (a && a.left) {\n                        b.changePxy(a.left, a.top);\n                    } else if (b) {\n                        this.callBackFunc(b);\n                    }\n                    return b;\n                }, null);\n            }\n            this.dotList.forEach( dot => {\n                if(dot.dt > Math.PI * 2){\n                    dot.destory();\n                    this.deleteDot(dot.key);\n                }else{\n                    dot.move();\n                }\n            })\n            this.list.forEach( (el,index) => {\n                if(index === 0){\n                    if(this.times % 100 === 9){\n                        el.changeColor(false);\n                    }\n                    this.hatList.forEach(hat=>{\n                        if(collText(el.el,hat.el)){\n                            hat.destory();\n                            this.removeHat(hat.key);\n                            \n                            const num = Math.round(hat.w /10);\n                            el.changeColor(true);\n                            this.addBiu(num);\n                            this.addDot(hat,num);\n                        }\n                    })\n                    this.collectionFirst(el);\n                }\n                el.move();\n                // el.changeRadius(10);\n            });\n            if (!this.isWorking) {\n                return;\n            };\n            this.playWork();\n        })\n    }\n    collectionFirst(item) {\n        const el = item.el;\n        if (el) {\n            if(el.offsetLeft < 0){\n                el.style.left = winWidth + 'px';\n            }else if(el.offsetLeft > winWidth){\n                el.style.left = 0 + 'px';\n            }else if(el.offsetTop < 0){\n                el.style.top = winHeight + 'px';\n            }else if(el.offsetTop > winHeight){\n                el.style.top = 0 + 'px';\n            }\n        }\n    }\n}\nconst bus = new WorkBus();\nbus.playWork();\nvar snakeNum = 10;\nwhile (snakeNum > 0) {\n    snakeNum--;\n    const t = winHeight / 2 + 10 * snakeNum;\n    const snake = new Biu({ left: winWidth / 2, top: t, radius: 10 });\n    bus.add(snake);\n}\nfunction up() {\n    // console.log(\"上\");\n    bus.callFunc(el => el.changeSpeed(0, -1));\n}\nfunction right() {\n    // console.log(\"右\");\n    bus.callFunc(el => el.changeSpeed(1, 0));\n}\nfunction down() {\n    // console.log(\"下\");\n    bus.callFunc(el => el.changeSpeed(0, 1));\n\n}\nfunction left() {\n    // console.log(\"左\");\n    bus.callFunc(el => el.changeSpeed(-1, 0));\n}\ndocument.body.addEventListener('touchmove', function (e) {\n    e.preventDefault(); //阻止默认的处理方式(阻止下拉滑动的效果)\n}, { passive: false }); //passive 参数不能省略，用来兼容ios和android\ndocument.addEventListener('touchstart', function (event) {\n    if (event.touches.length > 1) {\n        event.preventDefault()\n    }\n});\ndocument.addEventListener('gesturestart', function (event) {\n    event.preventDefault()\n});\nEventUtil.listenTouchDirection(document.body, true, up, right, down, left)"]}